import * as THREE from 'three';

import type { CreateThreeScene, ThreeSceneActions } from '@/types/three';

export const createWaterScene: CreateThreeScene = (config) => {
  // ============================================================================================
  // CONFIG
  // ============================================================================================

  // ============================================================================================
  // Disposable asset arrays
  // ============================================================================================

  const meshObjects: THREE.Mesh[] = [];
  const geometryObjects: THREE.BufferGeometry[] = [];
  const materialObjects: THREE.Material[] = [];
  const lightObjects: THREE.Light[] = [];

  // ============================================================================================
  // Asset creation
  // ============================================================================================

  // =============== GEOMETRY AND MATERIALS =================

  // ==================== 3D OBJECTS ====================

  // ==================== HELPERS ====================
  const gridHelper = new THREE.GridHelper(100, 100);
  const axesHelper = new THREE.AxesHelper(15);

  // ==================== LIGHTS ====================
  const light = new THREE.DirectionalLight(0xffffff, 0.8);
  const ambientLight = new THREE.AmbientLight(0xffffff, 0.2);

  lightObjects.push(light, ambientLight);

  // ============================================================================================
  // Functions
  // ============================================================================================
  const populateScene = (scene: THREE.Scene): boolean => {
    meshObjects.forEach((mesh) => scene.add(mesh));
    lightObjects.forEach((light) => scene.add(light));

    scene.add(gridHelper, axesHelper);

    scene.background = new THREE.Color(0xffffff); // white

    return true;
  };

  /**
   *
   * @param t - time in milliseconds
   * @returns
   */
  const animateFrame = (t?: number): void => {
    // TODO: Implement animation
    console.log('Animating frame at time: ', t);
  };

  const dispose = (): void => {
    meshObjects.forEach((mesh) => {
      mesh.geometry.dispose();
    });
    geometryObjects.forEach((geometry) => {
      geometry.dispose();
    });
    materialObjects.forEach((material) => {
      material.dispose();
    });
    lightObjects.forEach((light) => {
      light.dispose();
    });
    gridHelper.dispose();
    axesHelper.dispose();
  };

  const returnActions: ThreeSceneActions = {
    populateScene,
    animateFrame,
    dispose,
  };

  return returnActions;
};
